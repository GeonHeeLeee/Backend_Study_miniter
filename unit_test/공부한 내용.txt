시스템 테스트의 종류

시스템 테스트에는 크게 3가지가 있다.

1. UI test / End-To-End Test
2. Integration test
3. Unit Test

UI test는 말 그대로 시스템의 UI를 통해서 테스트하는 것이다. 웹사이트를 예를 들면, 웹사이트를 실제로 접속하고 UI에 직접 입력하고 클릭하는 방식 등으로 기능이 정상적으로 작동하고
화면이 정상적으로 출력되는지 확인하는 테스트이다. UI 테스트의 장점은 사용자 환경과 가장 유사하게 테스트하게 된다는 점이다.
하지만 이는 시간이 가장 많이 소요된다는 단점이 있다. 왜냐하면 전체적인 시스템을 테스트하는 것이므로, 프론트엔드부터 백엔드까지 모든 시스템을 실행시키고 연결해야되고 자동화가 가장
까다롭다. 

Integration Test는 어떤 부분에서는 UI test와 비슷하다. 예를 들면, 내가 구현한 Miniter에 3가지 기능이 있다고 하자. UI test에서 이 세가지를 통틀어서 테스트를 하는거라면,
Integration Test는 이 중 하나를 정하고 테스트하는 것이다. UI Test는 포론트부터 백까지 다 연결하고 실행해야하지만, Integration은 백엔드 시스템만 구동시켜놓고 HTTP 요청등을 이용해
테스트 해보는 것이다. 하나의 시스템만 정하고 실행시키기 때문에 UI Test보다 간단하지만 그럼에도 불구하고 여전히 까다로운 부분이 존재하며 자동화가 까다롭다.

마지막으로 Unit Test다 Unit Test의 개념은 코드로 코드를 테스트하는것이다. 테스트 코드를 작성하여 각 단위 함수들이 제대로 작동하는지 확인하는 것이다. 함수 단위로 테스트하기 때문에,
100% 자동화가 가능하며 어디서 오류가 났는지 알아보기에도 용이하다.

따라서 UI Test 10%, Integration test 20%, Unit Test 70% 비중으로 테스트하기를 권장한다.




Pytest

파이썬에서는 Pytest를 이용한 Unit test 기능을 제공한다.
Pytest는 파일명 앞 test_이라고 되어 있는 파일들만 테스트 파일로 인식하고 실행한다. 이는 함수도 마찬가지이다. 함수명도 test_로 시작해야 테스트 함수로 인식하고 이를 실행한다.
예시는 따로 파일로 만들어 두었다.

Unit Test에 대한 더 많은 정보는 코드에 주석으로 달아놓았다.
